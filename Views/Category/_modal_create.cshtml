@model StockControll.Models.Category

@{ 
    Layout = null;

    Model.CreatedAt = DateTime.Now;
}

@* Modal para criar categoria *@
<div class="modal fade" id="create-category-modal">
    <div class="modal-dialog">
        <div class="modal-content">
            @using (Html.BeginForm("CreateCategory", "Category", FormMethod.Post, new { @onsubmit = "submitForm(this)", @id = $"create-user-form", role = "form" }))
            {
                <div class="modal-header">
                    <h3 class="modal-title">Criar novo modelo de produto</h3>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>

                <div class="modal-body">
                    @Html.AntiForgeryToken()

                    @Html.HiddenFor(m => m.CreatedAt)

                    <div class="form-group">
                        @Html.LabelFor(m => m.Name, new { @class = "form-label", @for = "new-user-name" })
                        @Html.TextBoxFor(m => m.Name, new { @class = "form-control", @id = "new-user-name" })
                        @Html.ValidationMessageFor(m => m.Name)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Color, new { @class = "form-label", @for = "new-user-cpf" })
                        @Html.TextBoxFor(m => m.Color, new { @class = "form-control", @id = "new-user-cpf" })
                        @Html.ValidationMessageFor(m => m.Color)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Sole, new { @class = "form-label", @for = "new-user-email" })
                        @Html.TextBoxFor(m => m.Sole, new { @class = "form-control", @id = "new-user-email" })
                        @Html.ValidationMessageFor(m => m.Sole)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Description, new { @class = "form-label", @for = "new-user-password" })
                        @Html.TextAreaFor(m => m.Description, new { @class = "form-control", @id = "new-user-password" })
                        @Html.ValidationMessageFor(m => m.Description)
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Fechar</button>
                    <button type="submit" class="btn btn-primary">Salvar</button>
                </div>
            }
        </div>
    </div>
</div>

<script>
    function submitForm(submit) {
        event.preventDefault();

        Swal.fire({
            title: 'Uma pergunta ...',
            text: 'Deseja enviar o formulário de criação?',
            icon: 'question',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            cancelButtonText: 'Não',
            confirmButtonText: 'Sim'
        }).then(result => {
            var modal = submit.closest('.modal');
            var form = submit.closest('form');

            if (!result.isConfirmed) {
                $(`#${modal.id}`).modal("hide");
                return;
            }

            $(`#${modal.id}`).modal("hide");
            form.submit()
        })
    }
</script>