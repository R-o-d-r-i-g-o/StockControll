@model StockControll.Models.User
@using StockControll.Commons

@{ 
    Layout = null;

    Model.CreatedAt = DateTime.Now;
    Model.DeletedAt = null;
}

<div class="modal fade" id="create-user-modal">
    <div class="modal-dialog">
        <div class="modal-content">
            @using (Html.BeginForm("CreateUser", "User", FormMethod.Post, new { @onsubmit = "submitForm(this)", @id = $"create-user-form", role = "form" }))
            {
                <div class="modal-header">
                    <h3 class="modal-title">Criar novo usuário</h3>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>

                <div class="modal-body">
                    @Html.AntiForgeryToken()

                    @Html.HiddenFor(m => m.CreatedAt)

                    @Html.HiddenFor(m => m.DeletedAt)

                    <div class="form-group">
                        @Html.LabelFor(m => m.Name, new { @class = "form-label", @for = "new-user-name" })
                        @Html.TextBoxFor(m => m.Name, new { @class = "form-control", @id = "new-user-name" })
                        @Html.ValidationMessageFor(m => m.Name)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.CPF, new { @class = "form-label", @for = "new-user-cpf" })
                        @Html.TextBoxFor(m => m.CPF, new { @class = "form-control", @id = "new-user-cpf", maxlength = "11", @oninput = "RemoveSpecialCharacters(this)" })
                        @Html.ValidationMessageFor(m => m.CPF)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Email, new { @class = "form-label", @for = "new-user-email" })
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @id = "new-user-email" })
                        @Html.ValidationMessageFor(m => m.Email)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Password, new { @class = "form-label", @for = "new-user-password" })
                        @Html.TextBoxFor(m => m.Password, new { @class = "form-control", @id = "new-user-password" })
                        @Html.ValidationMessageFor(m => m.Password)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.UserType, new { @class = "form-label", @for = "new-user-type" })
                        @Html.DropDownListFor(m => m.UserType, Enums.GetUsertypeOptions(), "Escolha o cargo do usuário", new { @class = "form-control", @id = "new-user-type" })
                        @Html.ValidationMessageFor(m => m.UserType)
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Fechar</button>
                    <button type="submit" class="btn btn-primary">Salvar</button>
                </div>
            }
        </div>
    </div>
</div>
